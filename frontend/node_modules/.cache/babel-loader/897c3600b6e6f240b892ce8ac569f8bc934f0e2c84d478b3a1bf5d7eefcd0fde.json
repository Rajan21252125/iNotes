{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\react\\\\cwh\\\\iNotes\\\\frontend\\\\src\\\\context\\\\note\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"https://inotes-i3zr.onrender.com/\";\n  const initialNotes = [];\n  const [notes, setNotes] = useState(initialNotes);\n\n  //fetch Notes\n  const getNote = async () => {\n    const response = await fetch(`${host}api/notes/fetchallnots`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add Notes\n  const addNote = async (title, description, tag) => {\n    // API Call\n    const response = await fetch(`${host}api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    setNotes(notes.concat(json));\n  };\n\n  // Delete Notes\n  const deleteNote = async id => {\n    const response = await fetch(`${host}api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    const newNotes = notes.filter(notes => {\n      return notes._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit Note\n  const editNote = async (id, title, description, tag) => {\n    // api call\n    const response = await fetch(`${host}api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    //logic to edit note\n    for (let index = 0; index < newNotes.length; index++) {\n      if (newNotes[index]._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"U0gqYVJX8qasCuef0/bRvQrZ8LU=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","initialNotes","notes","setNotes","getNote","response","fetch","method","headers","localStorage","getItem","json","console","log","addNote","title","description","tag","body","JSON","stringify","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop/react/cwh/iNotes/frontend/src/context/note/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"https://inotes-i3zr.onrender.com/\";\r\n  const initialNotes = [];\r\n  const [notes, setNotes] = useState(initialNotes);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //fetch Notes\r\n  const getNote = async () => {\r\n    const response = await fetch(`${host}api/notes/fetchallnots`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem('token'),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Add Notes\r\n  const addNote = async (title, description, tag) => {\r\n    // API Call\r\n    const response = await fetch(`${host}api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({title , description , tag})\r\n    });\r\n    const json = await response.json();\r\n    setNotes(notes.concat(json))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Delete Notes\r\n  const deleteNote = async(id) => {\r\n    const response = await fetch(`${host}api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem('token'),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    const newNotes = notes.filter((notes) => {\r\n      return notes._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Edit Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // api call\r\n    const response = await fetch(`${host}api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({title , description , tag})\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n    //logic to edit note\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      if (newNotes[index]._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes)\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNote, deleteNote, editNote, getNote }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}